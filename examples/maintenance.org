# -*- eval: (load-library "elot-defaults") -*-
#+title: The Maintenance Reference Ontology as ELOT example
#+subtitle: An OWL ontology
#+author: IOF Maintenance Working Group
#+date: WIP (version of 2024-08-16 10:38)
#+call: theme-readtheorg()



* COMMENT Notes
When iof-core is imported, ROBOT produces a rather long list of
warnings.
* Maintenance
:PROPERTIES:
:ID: Maintenance
:ELOT-context-type: ontology
:ELOT-context-localname: Maintenance
:ELOT-default-prefix: iof-maint
:header-args:omn: :tangle ./Maintenance.omn :noweb yes
:header-args:emacs-lisp: :tangle no :exports results
:header-args:sparql: :url "Maintenance.omn"
:header-args: :padline yes
:END:
:OMN:
#+begin_src omn :exports none
##
## This is the Maintenance ontology
## This document is in OWL 2 Manchester Syntax, see https://www.w3.org/TR/owl2-manchester-syntax/
##

## Prefixes
<<omn-prefixes()>>

## Ontology declaration
<<resource-declarations(hierarchy="Maintenance-ontology-declaration", owl-type="Ontology", owl-relation="")>>

## Data type declarations
Datatype: xsd:dateTime
Datatype: xsd:date
Datatype: xsd:boolean
Datatype: rdf:PlainLiteral
Datatype: xsd:anyURI

## Class declarations
<<resource-declarations(hierarchy="Maintenance-class-hierarchy", owl-type="Class")>>

## Object property declarations
<<resource-declarations(hierarchy="Maintenance-object-property-hierarchy", owl-type="ObjectProperty")>>

## Data property declarations
<<resource-declarations(hierarchy="Maintenance-data-property-hierarchy", owl-type="DataProperty")>>

## Annotation property declarations
<<resource-declarations(hierarchy="Maintenance-annotation-property-hierarchy", owl-type="AnnotationProperty")>>

## Individual declarations
<<resource-declarations(hierarchy="Maintenance-individuals", owl-type="Individual")>>

## Resource taxonomies
<<resource-taxonomy(hierarchy="Maintenance-class-hierarchy", owl-type="Class", owl-relation="SubClassOf")>>
<<resource-taxonomy(hierarchy="Maintenance-object-property-hierarchy", owl-type="ObjectProperty", owl-relation="SubPropertyOf")>>
<<resource-taxonomy(hierarchy="Maintenance-data-property-hierarchy", owl-type="DataProperty", owl-relation="SubPropertyOf")>>
<<resource-taxonomy(hierarchy="Maintenance-annotation-property-hierarchy", owl-type="AnnotationProperty", owl-relation="SubPropertyOf")>>
#+end_src
:END:
** Prefixes
The ontology document in OWL employs the namespace prefixes of table [[prefix-table]].

#+name: prefix-table
#+attr_latex: :align lp{.8\textwidth} :font  mall
#+caption: OWL ontology prefixes
| prefix     | uri                                                                            |
|------------+--------------------------------------------------------------------------------|
| owl:       | http://www.w3.org/2002/07/owl#                                                 |
| rdf:       | http://www.w3.org/1999/02/22-rdf-syntax-ns#                                    |
| xml:       | http://www.w3.org/XML/1998/namespace                                           |
| xsd:       | http://www.w3.org/2001/XMLSchema#                                              |
| rdfs:      | http://www.w3.org/2000/01/rdf-schema#                                          |
| skos:      | http://www.w3.org/2004/02/skos/core#                                           |
| pav:       | http://purl.org/pav/                                                           |
| foaf:      | http://xmlns.com/foaf/0.1/                                                     |
| dc:        | http://purl.org/dc/elements/1.1/                                               |
| dcterms:   | http://purl.org/dc/terms/                                                      |
| prov:      | http://www.w3.org/ns/prov#                                                     |
| obo:       | http://purl.obolibrary.org/obo/                                                |
| iof-core:  | https://spec.industrialontologies.org/ontology/core/Core/                      |
| iof-av:    | https://spec.industrialontologies.org/ontology/core/meta/AnnotationVocabulary/ |
| iof-maint: | https://spec.industrialontologies.org/ontology/maintenance/Maintenance/        |
| iof-ont:   | https://spec.industrialontologies.org/ontology/                                |
*** Source blocks for prefixes                                     :noexport:
:PROPERTIES:
:header-args:omn: :tangle no
:END:
#+name: sparql-prefixes
#+begin_src emacs-lisp :var prefixes=prefix-table :exports none
  (elot-prefix-block-from-alist prefixes 'sparql)
#+end_src

#+results: sparql-prefixes
#+begin_example
PREFIX owl:  <http://www.w3.org/2002/07/owl#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xml:  <http://www.w3.org/XML/1998/namespace>
PREFIX xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX pav:  <http://purl.org/pav/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dc:   <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX obo:  <http://purl.obolibrary.org/obo/>
PREFIX iof-core: <https://spec.industrialontologies.org/ontology/core/Core/>
PREFIX iof-av: <https://spec.industrialontologies.org/ontology/core/meta/AnnotationVocabulary/>
PREFIX iof-maint: <https://spec.industrialontologies.org/ontology/maintenance/Maintenance/>
PREFIX iof-ont: <https://spec.industrialontologies.org/ontology/>
#+end_example

#+name: omn-prefixes
#+begin_src emacs-lisp :var prefixes=prefix-table :exports none
  (elot-prefix-block-from-alist prefixes 'omn)
#+end_src
#+name: ttl-prefixes
#+begin_src emacs-lisp :var prefixes=prefix-table :exports none
  (elot-prefix-block-from-alist prefixes 'ttl)
#+end_src

** Maintenance ontology (iof-maint: iof-ont:202401/maintenance/Maintenance/)
:PROPERTIES:
:ID:       Maintenance-ontology-declaration
:custom_id: Maintenance-ontology-declaration
:resourcedefs: yes
:END:
  - Import ::  iof-core:
 - pav:lastUpdateOn :: {{{modification-time("%Y-%m-%dT%H:%M:%SZ",t)}}}^^xsd:dateTime
 - dcterms:modified ::  {{{modification-time("%Y-%m-%d",t)}}}^^xsd:date
 - dcterms:abstract :: The purpose of this IOF Maintenance Reference ontology is to support semantic interoperatibility
   through the use modular ontologies in the maintenance domain. This Ontology contains terms and concepts identified as
   common in a number of application ontologies for maintenance management, maintenance procedures, asset failure and
   failure modes and effects analysis. The ontology is aligned with the IOF Core Ontology which is aligned with Basic
   Formal Ontology and importas terms for other domain independent ontologies.
 - dcterms:contributor :: "Caitlin Woods, University of Western Australia"@en
 - dcterms:contributor :: "Markus Stumptner, University of South Australia"@en
 - dcterms:contributor :: "Matt Selway, University of South Australia"@en
 - dcterms:contributor :: "Melinda Hodkiewicz, University of Western Australia"@en
 - dcterms:creator :: "IOF Maintenance Working Group"@en
 - dcterms:license :: http://opensource.org/licenses/MIT
 - dcterms:publisher :: "Industrial Ontology Foundry"@en
 - dcterms:references :: dcterms:
 - dcterms:references :: http://www.w3.org/2004/02/skos/core#
 - dcterms:title :: Industrial Ontology Foundry (IOF) Maintenance Reference Ontology
 - iof-av:maturity :: iof-av:Provisional
** Disjointness clause                                            :nodeclare:
#+begin_src omn
DisjointClasses: 
    iof-maint:DegradedState,iof-maint:FailedState,iof-maint:OperatingState
#+end_src
** Classes
:PROPERTIES:
:ID:       Maintenance-class-hierarchy
:custom_id: Maintenance-class-hierarchy
:resourcedefs: yes
:END:

We add a diagram. TODO: allow for the ttl to be implicit, so only one call is needed.
#+name: ttl-Event
#+call: ttl-Class-hierarchy(top="iof-core:Event iof-core:InformationContentEntity obo:BFO_0000015")

#+name: rdfpuml:Event
#+call: rdfpuml-block(ttlblock="ttl-Event") :eval never-export
#+caption: My diagram with Event, InformationContentEntity
#+results: rdfpuml:Event
[[file:./images/ttl-Event.svg]]

*** occurrent (obo:BFO_0000003)
*** process (obo:BFO_0000015)
**** failure effect (iof-maint:FailureEffect)
 - skos:example :: leaking pipe, erratic operation, equipment does not run
 - iof-av:firstOrderLogicAxiom :: FailureEffect(x) → Process(x) ∧ ∃f((FailureEvent(f) ∨ FailureProcess(f)) ∧
   precededBy(x, f))
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Released
 - iof-av:naturalLanguageDefinition :: "process that is the consequence of failure, within or beyond the boundary of the
   failed item"@en-us
 - iof-av:primitiveRationale :: it is not possible to determine that a process is a failure effect from the ontology
   alone and requires external analysis to identify such an occurrence.
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'failure effect' then x is a 'process' that is 'preceded by' some
   'failure event' or 'failure process'
 - iof-av:usageNote :: Failure effect does not make any commitments to what types of BFO:process can or cannot be
   considered effects of (functional) failure. Therefore, failure effect can classify any BFO:process (part or whole),
   indicating that the process is considered the result of a failure for the purposes of maintenance.
 - SubClassOf :: obo:BFO_0000062 some (iof-maint:FailureEvent or iof-maint:FailureProcess)
**** failure process (iof-maint:FailureProcess)
 - skos:example :: short circuiting process, deformation process, corrosion process
 - iof-av:firstOrderLogicDefinition :: FailureProcess(x) ↔ Process(x) ∧ ∃y(DispositionToFail(y) ∧ realizes(x,y))
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Released
 - iof-av:naturalLanguageDefinition :: "process that changes some quality of an item causing the item to become degraded
   or failed"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of 'failure process' is defined as exactly an instance
   of 'process' that 'realizes' some 'disposition to fail'
 - iof-av:synonym :: functional failure
 - EquivalentTo :: obo:BFO_0000015 and (obo:BFO_0000055 some iof-maint:DispositionToFail)
**** functioning process (iof-maint:FunctioningProcess)
 - rdfs:seeAlso :: ISO81346 for examples of functioning processes associated with functions
 - skos:example :: sensing process, controlling process, transforming process
 - iof-av:adaptedFrom :: The natural language definition is adapted from EN:13306
 - iof-av:firstOrderLogicDefinition :: FunctioningProcess(x) ↔ Process(x) ∧ ∃y(Function(y) ∧ realizes(x,y))
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Released
 - iof-av:naturalLanguageDefinition :: "process in which an item performs its function"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of 'functioning process' is defined as exactly an
   instance of 'process' that 'realizes' some 'function'
 - EquivalentTo :: obo:BFO_0000015 and (obo:BFO_0000055 some obo:BFO_0000034)
*** disposition (obo:BFO_0000016)
**** undesireable disposition (iof-maint:UndesireableDisposition)
 - skos:example :: disposition to leak, disposition to overheat, disposition to vibrate
 - iof-av:explanatoryNote :: There are two subclasses, disposition to fail and disposition to exhibit undesirable
   behavior. We need to distinguish between the disposition to leak which is realised in a leaking process (regarded as
   a failure) and the disposition to overheat realised in a heating process (which, in this example) is not a failure
   process).

   We asset that disposition to exhibit undesirable behavior is the disposition of an item that would not be expected
   under normal operating conditions but may occur such as vibration or overheating.
 - iof-av:firstOrderLogicDefinition :: UndesirableDisposition(x) ↔ DispositionToFail(x) ∨
   DispositionToExhibitUndesirableBehavior(x)
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "disposition of an item to undergo a process that leads to undesirable
   outcomes"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of 'undesirable disposition' is defined as exactly an
   instance of 'disposition to fail' or exactly an instance of 'disposition to exhibit undesirable behavior'
 - iof-av:synonym :: failure mode
 - EquivalentTo :: iof-maint:DispositionToExhibitUndesirableBehavior or iof-maint:DispositionToFail
***** disposition to exhibit undesirable behavior (iof-maint:DispositionToExhibitUndesirableBehavior)
 - skos:example :: overspeed, excessive noise
 - iof-av:firstOrderLogicAxiom :: LA1: DispositionToUndesirableBehavior(x) → UndesirableDisposition(x)
 - iof-av:firstOrderLogicAxiom :: LA2: ∀p(DispositionToExibitUndesirableBehavior(d) ∧ Process(p) ∧ realizes(p, d) → ¬
   FailureProcess(p))
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "disposition of an item that would not be expected under normal operating
   conditions"@en-us
 - iof-av:primitiveRationale :: the item may or may not exhibit this behavior hence this is difficult to define clearly
 - iof-av:semiFormalNaturalLanguageAxiom :: LA1: if x is a 'disposition to undesirable behavior' then x is a
   'undesirable disposition'
 - iof-av:semiFormalNaturalLanguageAxiom :: LA2: if x is a 'disposition to undesirable behavior' and x 'realizes' some
   'process' p then p is not a 'failure process'
 - SubClassOf :: obo:BFO_0000054 only (not (iof-maint:FailureProcess))
***** disposition to fail (iof-maint:DispositionToFail)
 - skos:example :: disposition to explode, disposition to fracture, disposition to sieze
 - iof-av:firstOrderLogicAxiom :: DispositionToFail(x) → UndesireableDisposition(x) ∧ ∃y(FailureProcess(y) ∧
   hasRealization(x,y))
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Released
 - iof-av:naturalLanguageDefinition :: "disposition of an item to undergo a failure process"@en-us
 - iof-av:primitiveRationale :: As a disposition will come into its existance prior to its realization in a failure
   process necessary and sufficient conditions can not be created at this point due to a lack of patterns to express
   process types regardless of the time of their existence
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'disposition to fail' then x is a 'undesireable disposition' that
   'has realization' some 'failure process'
 - SubClassOf :: obo:BFO_0000054 some iof-maint:FailureProcess
*** function (obo:BFO_0000034)
**** required function (iof-maint:RequiredFunction)
 - rdfs:seeAlso :: ISO81346 for examples of functions
 - skos:example :: to sense, to store, to process information, to control
 - iof-av:adaptedFrom :: The natural language definition is adapted from EN:13306
 - iof-av:explanatoryNote :: the function can be a combination of functions
 - iof-av:firstOrderLogicDefinition :: RequiredFunction(x) ↔ Function(x) ∧ ∃y,z(MaintainableMaterialItem(y) ∧
   FunctioningProcess(z) ∧ participatesInAtSomeTime(y,z) ∧ functionOf(x,y))
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Released
 - iof-av:naturalLanguageDefinition :: "function of a maintainable material item which is considered necessary to fulfil
   a process requirement"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of 'required function' is defined as an instance of
   'function' that is the 'function of' some 'maintainable material item' that 'participates in at some time' some
   'functioning process'
 - iof-av:synonym :: primary function
 - SubClassOf :: (obo:BFO_0000056 some iof-maint:FunctioningProcess) and (iof-core:functionOf some
   iof-core:MaintainableMaterialItem)
*** Event (iof-core:Event)
**** failure event (iof-maint:FailureEvent)
 - rdfs:seeAlso :: ISO81346 for examples of functions
 - skos:example :: explosion, seizure, loss of power, loss of control
 - iof-av:explanatoryNote :: the event can be the loss of the primary function or a combination of functions
 - iof-av:firstOrderLogicDefinition :: FailureEvent(e) ↔ Event(e) ∧ ∃o(FailedState(o) ∧ initiates(e, o)) ∧
   ∃i,f,p1(MaintainableMaterialItem(i) ∧ hasParticipantAtAllTimes(e, i) ∧ PrimaryFunction(f) ∧ hasFunction(i, f) ∧
   FunctioningProcess(p1) ∧ realizes(p1, f) ∧ precedes(p1, e) ∧ ¬∃p2(FunctioningProcess(p2) ∧ realizes(p2,f) ∧
   precedes(p1, p2) ∧ precedes(p2, e)))
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "event that causes an item to lose its ability to perform a required
   function"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of 'failure event' is defined as exactly an instance of
   'event' e that 'initiates' some 'failed state' and that 'has participant at all times' some 'maintainable material
   item' that 'has function' some 'primary function ' f that 'has realization' some 'functioning process' p1 that
   'precedes' e and there is no 'functioning process' p2 such that p2 'realizes' f and p1 'precedes' p2 and p2
   'precedes' e
 - iof-av:synonym :: failure
 - SubClassOf :: iof-maint:initiates some iof-maint:FailedState
*** InformationContentEntity (iof-core:InformationContentEntity)
**** failure mode code (iof-maint:FailureModeCode)
 - rdfs:seeAlso :: ISO14224 for example list of failure modes
 - skos:example :: "high output", "leaking", "vibrating"
 - iof-av:adaptedFrom :: The natural language definition is adapted from EN:13306
 - iof-av:firstOrderLogicAxiom :: FailureModeCode(x) → InformationContentEntity(x) ∧ ∃y(UndesirableDisposition(y) ∧
   describes(x,y))
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "information content entity that describes an undesireable disposition"@en-us
 - iof-av:primitiveRationale :: at this stage we do not have sufficient constructs to create necessary and sufficent
   conditions for this class.
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'failure mode code' then x is an 'information content entity' and
   there is some 'undesirable disposition' that 'is described by' x
 - SubClassOf :: iof-core:describes some iof-maint:UndesireableDisposition
**** maintenance work order record (iof-maint:MaintenanceWorkOrderRecord)
 - skos:example :: a record in a (computerised) maintenance management system that contains fields for due and actual
   date of the maintenance, a description of the maintenance task, actual and budget costs and other fields
 - iof-av:acronym :: MWO
 - iof-av:explanatoryNote :: the record has a number of commonly used fields including dates, task description, task
   codes, costs
 - iof-av:explanatoryNote :: this definition remains provisional because it assumes that a work order must involve a
   'maintenance process'. In the current definition, a work order cannot be made up of purely 'supporting maintenance
   activity' tasks.
 - iof-av:firstOrderLogicDefinition :: MaintenanceWorkOrderRecord(x) ↔ InformationContentEntity(x) ∧
   ∃y(MaintenanceProcess(y) ∧ describes(x, y) ∧ isInputOf(x, y))
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "information content entity that describes a maintenance process"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of 'maintenance work order' is defined as exactly an
   instance of 'information content entity' that 'describes' some 'maintenance process' p and that 'is input of' p
 - iof-av:synonym :: maintenance work order
 - EquivalentTo :: iof-core:InformationContentEntity and (iof-core:describes some iof-maint:MaintenanceProcess) and
   (iof-core:isInputOf some iof-maint:MaintenanceProcess)
*** MaintainableMaterialItem (iof-core:MaintainableMaterialItem)
*** MaterialState (iof-core:MaterialState)
**** maintenance state (iof-maint:MaintenanceState)
 - skos:example :: is broken in two, is running at desired speed
 - iof-av:firstOrderLogicDefinition :: MaintenanceState(x) ↔ Operating State(x) ∨ DegradedState(x) ∨ FailedState(x)
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "stasis that holds during a temporal interval when the realizable functions and
   capabilities of the participating item, or the grade of realization of those functions and capabilities, remain
   unchanged"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of 'maintenance state' is defined as exactly an instance
   of 'operating state' or exactly an instance of 'degraded state' or exactly an instance of 'failed state'.
 - EquivalentTo :: iof-maint:DegradedState or iof-maint:FailedState or iof-maint:OperatingState
***** degraded state (iof-maint:DegradedState)
 - skos:example :: having a small crack, having a partial blockage, having an oscillating reading
 - iof-av:firstOrderLogicAxiom :: DegradedState(x) → MaintenanceState(x)
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "state of reduced ability to perform as required but with acceptable reduced
   performance"@en-us
 - iof-av:primitiveRationale :: we do not have the terms to deal with the concepts in the 2nd half of the NL definition
   about 'grade of realization'
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'degraded state' then x is a 'maintenance state'
***** failed state (iof-maint:FailedState)
 - skos:example :: is broken in two, is burst, is failing to turn on
 - iof-av:firstOrderLogicDefinition :: FailedState(o1) ↔ MaintenanceState(o1) ∧ ∃i(MaintainableMaterialItem(i) ∧
   hasParticipantAtAllTimes(o1, i) ∧ ∃e(FailureEvent(e) ∧ initiates(e, o1)) ∧ ∃o2((DegradedState(o2) ∨
   OperatingState(o2) ∧ hasParticipantAtAllTimes(o2,i)) ∧ precedes(o2, o1)) ∧ ¬∃o3((DegradedState(o3) ∨
   OperatingState(o3)) ∧ hasParticipantAtAllTimes(o3,i) ∧ precedes(o2, o3) ∧ precedes(o3, o1)))
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "state of an item being unable to perform a required function due to a failure
   event"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: 'failed state': every instance of 'failed state' is defined as exactly
   an instance of 'maintenance state' o1 that 'has participant at all times' some 'maintainable material item' i and
   that is 'initiated by' some 'failure event' and is 'preceded by' some ('degraded state' or 'operating state') o2 that
   'has participant at all times' i and there is no ('degraded state' or 'operating state' ) o3 such that o3 'has
   participant at all times' i and o2 'precedes' o3 and o3 'precedes' o1
 - SubClassOf :: obo:BFO_0000062 some (iof-maint:DegradedState or iof-maint:OperatingState)
 - SubClassOf :: obo:BFO_0000057 some iof-core:MaintainableMaterialItem, inverse (iof-maint:initiates) some
   iof-maint:FailureEvent
 - DisjointWith :: iof-maint:OperatingState
***** operating state (iof-maint:OperatingState)
 - skos:example :: running at desired speed, producing required power, pumping desired volume
 - iof-av:explanatoryNote :: In defining the state of an item as being able to perform a required function, we are
   assuming that the external resources, if required, are provided
 - iof-av:explanatoryNote :: Note that in an operating state the item may be functional (so in the operating state) and
   not currently operating (performing in the functioning process)
 - iof-av:firstOrderLogicAxiom :: OperatingState(x) → MaintenanceState(x)
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Released
 - iof-av:naturalLanguageDefinition :: "state of an item being able to perform a required function"@en-us
 - iof-av:primitiveRationale :: generally speaking, the determination of maintenance state is determined from outside of
   the ontology, e.g., through analytics, other reasoning mechanims, or by reports from the device or control system,
   and so is not determinable from the ontology alone. The required constructs for creation of a formal definition are
   not available in this release.
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'operating state' then x is a 'maintenance state'
 - DisjointWith :: iof-maint:FailedState
*** Person (iof-core:Person)
**** qualified maintenance person (iof-maint:QualifiedMaintenancePerson)
 - rdfs:seeAlso :: qualification specification
 - skos:example :: electrician, fitter, mechanic
 - iof-av:explanatoryNote :: Qualified person on its own is not particularly useful unless reasoning is constrained to
   only the individuals of interest at some time. Specific subtypes of qualified person are necessary to determine if
   specific qualification types are satisfied. Still, care must be taken when reasoning over temporal information as, if
   the critieria are met at some time, the classification will hold.
 - iof-av:firstOrderLogicDefinition :: QualifiedMaintenancePerson(x) ↔ Person(x) ∧ ∃y(MaintenanceActivity(y) ∧
   partcipatesInAtSomeTime(x,y) ∧ ∃z(QualificationSpecification(z) ∧ prescribedBy(y, z) ∧ satisfiesRequirement(x,z)))
 - iof-av:isPrimitive :: false
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "person who is qualified to perform a specified specified maintenance
   activity"@en-us
 - iof-av:semiFormalNaturalLanguageDefinition :: every instance of ‘qualified maintenance person’ is defined as exactly
   an instance of 'person' that 'participates in at some time' some 'maintenance activity' p and that 'satifies' some
   'qualification specification' that 'prescribes' p
 - EquivalentTo :: iof-core:Person and (obo:BFO_0000056 some iof-maint:MaintenanceActivity) and
   (iof-core:satisfiesRequirement some (iof-maint:QualificationSpecification and (iof-core:prescribes some
   iof-maint:MaintenanceActivity)))
*** PlanSpecification (iof-core:PlanSpecification)
**** maintenance strategy (iof-maint:MaintenanceStrategy)
 - skos:example :: specification of a corrective strategy for maintaining a pump (or pumps) of a plant
 - iof-av:firstOrderLogicAxiom :: PlanSpecification(x) ∧ (∃p(MaintenanceProcess(p) ∧ prescribes(x, p)) →
   MaintenanceStrategy(x)
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "maintenance (method/ approach/ actions) to enable (the/an) asset to achieve
   (management's/ desired) objectives"@en-us
 - iof-av:primitiveRationale :: Additional analysis to be performed on this concept. Involves agents, organisations, and
   business objectives.
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'plan specification' that 'prescribes' some 'maintenance process'
   then x is a 'maintenance strategy'
*** PlannedProcess (iof-core:PlannedProcess)
**** maintenance process (iof-maint:MaintenanceProcess)
 - skos:example :: process of replacing a pump, process of calibrating a sensor
 - iof-av:firstOrderLogicAxiom :: LA1: PlannedProcess(p) ∧ (∃x(MaintenanceStrategy(x) ∧ prescribes(x, p)) →
   MaintenanceProcess(p)
 - iof-av:firstOrderLogicAxiom :: LA2: MaintenanceProcess(p) → ∃x(MaintenanceStrategy(x) ∧ prescribes(x, p))
 - iof-av:firstOrderLogicAxiom :: LA3: MaintenanceProcess(p) → ∃x(MaintainableMaterialItem(x) ∧
   hasParticipantAtAllTimes(p, x) ∧ hasInput(p, x))
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "process to do with retaining or restoring the function of a maintainable
   material item under a maintenance strategy"@en-us
 - iof-av:primitiveRationale :: Additional analysis to be performed, particularly w.r.t. the associated maintenance
   strategy.
 - iof-av:semiFormalNaturalLanguageAxiom :: LA1: if p is 'planned process' that is prescribed by some 'maintenance
   strategy' then x is a 'maintenance process'
 - iof-av:semiFormalNaturalLanguageAxiom :: LA2: if p is 'maintenance process' then there is some 'maintenance strategy'
   that 'prescribes' p
 - iof-av:semiFormalNaturalLanguageAxiom :: LA3: if p is 'maintenance process' then there is some 'maintainable material
   item' x such that p 'has input' x and p 'has participant at all times' x
 - SubClassOf :: obo:BFO_0000057 some iof-core:MaintainableMaterialItem
 - SubClassOf :: iof-core:hasInput some iof-core:MaintainableMaterialItem
 - SubClassOf :: iof-core:prescribedBy some iof-maint:MaintenanceStrategy
***** maintenance activity (iof-maint:MaintenanceActivity)
 - skos:example :: replace activity, repair activity, inspect activity
 - iof-av:firstOrderLogicAxiom :: Maintenance Activity(x) → MaintenanceProcess(x)
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Released
 - iof-av:naturalLanguageDefinition :: "maintenance process that is a single task to retain or restore the function of a
   maintainable material item"@en-us
 - iof-av:primitiveRationale :: at this stage we do not have sufficient constructs to create necessary and sufficent
   conditions for this class.
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'maintenance activity' then x is a 'maintenance process'
**** supporting maintenance activity (iof-maint:SupportingMaintenanceActivity)
 - skos:example :: activities that do not change the state of the asset but are done by maintenance personnel such as
   reporting activity, isolate activity, move activity, training activity
 - iof-av:firstOrderLogicAxiom :: SupportingMaintenanceActivity(x) → PlannedProcess(x)
 - iof-av:isPrimitive :: true
 - iof-av:naturalLanguageDefinition :: "single action in support of the execution of a maintenance process"@en-us
 - iof-av:primitiveRationale :: at this stage we do not have sufficient constructs to create necessary and sufficent
   conditions for this class.
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'supporting maintenance activity' then x is a 'planned process'
*** RequirementSpecification (iof-core:RequirementSpecification)
**** qualification specification (iof-maint:QualificationSpecification)
 - skos:example :: electrical trade qualification, welding qualification, registered engineer
 - iof-av:firstOrderLogicAxiom :: QualificationSpecification(x) → RequirementSpecification(x)
 - iof-av:isPrimitive :: true
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "requirement specification that identifies the need for a person to have an
   assessed skill for a specific task"@en-us
 - iof-av:primitiveRationale :: detailed analysis of this concept is incomplete and, hence, the required constructs for
   creation of a formal definition are not available in this release.
 - iof-av:semiFormalNaturalLanguageAxiom :: if x is a 'qualification specification' then x is a 'requirement
   specification'
** Object properties
:PROPERTIES:
:ID:       Maintenance-object-property-hierarchy
:custom_id: Maintenance-object-property-hierarchy
:resourcedefs: yes
:END:
*** has realization (obo:BFO_0000054)
*** realizes (obo:BFO_0000055)
*** participates in (obo:BFO_0000056)
**** has maintenance state (iof-maint:hasMaintenanceState)
 - skos:example :: has partial function or loss of function
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "inverse of 'stateOf'"@en-us
 - Domain :: iof-core:MaintainableMaterialItem
 - Range :: iof-maint:MaintenanceState
 - InverseOf :: iof-maint:maintenanceStateOf
*** preceded by (obo:BFO_0000062)
*** precedes (obo:BFO_0000063)
**** initiates (iof-maint:initiates)
 - skos:example :: starts, begins, commences
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "comes before an event or process in time and results in beginning or creation of
   the event or process"@en-us
 - Domain :: obo:BFO_0000003
 - Range :: obo:BFO_0000015 or iof-core:Event
*** has participant (obo:BFO_0000057)
**** maintenance state of (iof-maint:maintenanceStateOf)
 - skos:example :: the physical or software asset
 - iof-av:maturity :: iof-av:Provisional
 - iof-av:naturalLanguageDefinition :: "relation that describes the maintenance state of a maintainable item"@en-us
 - Domain :: iof-maint:MaintenanceState
 - Range :: iof-core:MaintainableMaterialItem
 - InverseOf :: iof-maint:hasMaintenanceState
*** describes (iof-core:describes)
*** functionOf (iof-core:functionOf)
*** hasInput (iof-core:hasInput)
*** isInputOf (iof-core:isInputOf)
*** prescribedBy (iof-core:prescribedBy)
*** prescribes (iof-core:prescribes)
*** satisfiesRequirement (iof-core:satisfiesRequirement)
** Data properties
:PROPERTIES:
:ID:       Maintenance-data-property-hierarchy
:custom_id: Maintenance-data-property-hierarchy
:resourcedefs: yes
:END:
** Annotation properties
:PROPERTIES:
:ID:       Maintenance-annotation-property-hierarchy
:custom_id: Maintenance-annotation-property-hierarchy
:resourcedefs: yes
:END:
*** owl:versionInfo
*** dcterms:title
 - rdfs:isDefinedBy :: dcterms:
*** dcterms:license
 - rdfs:isDefinedBy :: dcterms:
*** dcterms:creator
 - rdfs:isDefinedBy :: dcterms:
*** dcterms:modified
 - rdfs:isDefinedBy :: dcterms:
*** dcterms:publisher
 - rdfs:isDefinedBy :: dcterms:
*** dcterms:description
 - rdfs:isDefinedBy :: dcterms:
*** dc:rights
 - rdfs:isDefinedBy :: dc:
*** pav:lastUpdateOn
 - rdfs:isDefinedBy :: pav:
*** skos:example
 - rdfs:isDefinedBy :: http://www.w3.org/2004/02/skos/core
*** skos:prefLabel
 - rdfs:isDefinedBy :: http://www.w3.org/2004/02/skos/core
*** skos:altLabel
 - rdfs:isDefinedBy :: http://www.w3.org/2004/02/skos/core
*** iof-av:isPrimitive
 - rdfs:isDefinedBy :: iof-av:
*** skos:definition
 - rdfs:isDefinedBy :: http://www.w3.org/2004/02/skos/core
**** iof-av:naturalLanguageDefinition
 - rdfs:isDefinedBy :: iof-av:
**** iof-av:primitiveRationale
 - rdfs:isDefinedBy :: iof-av:
*** abstract (dcterms:abstract)
*** acronym (iof-av:acronym)
*** adaptedFrom (iof-av:adaptedFrom)
*** contributor (dcterms:contributor)
*** explanatoryNote (iof-av:explanatoryNote)
*** firstOrderLogicAxiom (iof-av:firstOrderLogicAxiom)
*** firstOrderLogicDefinition (iof-av:firstOrderLogicDefinition)
*** maturity (iof-av:maturity)
*** references (dcterms:references)
*** seeAlso (rdfs:seeAlso)
*** semiFormalNaturalLanguageAxiom (iof-av:semiFormalNaturalLanguageAxiom)
*** semiFormalNaturalLanguageDefinition (iof-av:semiFormalNaturalLanguageDefinition)
*** synonym (iof-av:synonym)
*** usageNote (iof-av:usageNote)
** Individuals
:PROPERTIES:
:ID:       Maintenance-individuals
:custom_id: Maintenance-individuals
:resourcedefs: yes
:END:
